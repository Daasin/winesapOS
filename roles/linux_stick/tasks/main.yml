---
- name: Disable automatic package list updates
  lineinfile:
    path: "{{ item }}"
    regexp: '^APT::Periodic::Update-Package-Lists'
    line: 'APT::Periodic::Update-Package-Lists "0";'
  loop:
    - /etc/apt/apt.conf.d/10periodic
    - /etc/apt/apt.conf.d/20auto-upgrades

- name: Disable automatic upgrades
  lineinfile:
    path: /etc/apt/apt.conf.d/20auto-upgrades
    regexp: '^APT::Periodic::Unattended-Upgrade'
    line: 'APT::Periodic::Unattended-Upgrade "0";'

- name: Install packages
  package:
    state: present
    name: "{{ item }}"
  loop:
    # Codecs
    - libavcodec-extra
    # Temporarily disabled due to package conflicts.
    #- libdvd-pkg
    - ubuntu-restricted-extras
    # Drivers
    - dkms
    - hfsprogs
    - rtl8812au-dkms
    # Gaming
    - mesa-vulkan-drivers
    - mesa-vulkan-drivers:i386
    - steam
    - wine
    - winetricks
    # Multimedia
    - firefox
    - vlc
    # Network
    - curl
    - nmap
    - openssh-server
    - wget
    # Tools
    - ansible
    - clamav
    - gcc
    - git
    - lm-sensors
    - make
    - mlocate
    - ncdu
    - openjdk-8-jre
    - python3-pip
    - qdirstat
    - rsync
    - terminator
    - tlp
    - tmate
    - vim

- name: Create the file /etc/modules-load.d/linux-gaming-stick.conf
  file:
    name: /etc/modules-load.d/linux-gaming-stick.conf
    state: touch

- name: Configure kernel drivers to load on start-up
  lineinfile:
    path: /etc/modules-load.d/linux-gaming-stick.conf
    line: "{{ item }}"
  loop:
    # WiFi drivers
    - 8812au
    - 88x2b

- name: Setup SSH keys
  authorized_key:
    user: "{{ stick_user }}"
    key: "{{ item }}"
  loop: "{{ stick_ssh_keys }}"
  when: stick_ssh_keys_setup
  tags:
    - ssh

- name: Configure the SSH daemon
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^{{ item }}"
    line: "{{ item }} no"
  loop:
    - PasswordAuthentication
    - PermitRootLogin
  tags:
    - ssh

- name: Enable the SSH daemon
  systemd:
    name: sshd
    state: started
    enabled: true
  tags:
    - ssh
    - systemd

- name: Download Google Chrome
  get_url:
    url: https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    dest: /tmp
    force: no
  tags:
    - chrome

- name: Install Google Chrome
  apt:
    deb: /tmp/google-chrome-stable_current_amd64.deb
    state: present
  tags:
    - chrome

- name: Setup Proton Glorious Eggroll (GE) edition
  when: stick_user is defined
  become: true
  become_user: "{{ stick_user }}"
  tags:
    - proton
  block:
    - name: Create compatibility tools directory
      file:
        path: "/home/{{ stick_user }}/.steam/root/compatibilitytools.d/"
        state: directory

    - name: Download Proton GE
      get_url:
        url: "{{ item.url }}"
        dest: "/home/{{ stick_user }}/.steam/root/compatibilitytools.d/"
        checksum: "{{ item.checksum }}"
        force: no
      loop:
        - url: https://github.com/GloriousEggroll/proton-ge-custom/releases/download/5.9-GE-5-ST/Proton-5.9-GE-5-ST.tar.gz
          checksum: sha256:34a70ba35857f24f74c51e5194729f488f2bf17364102ebdf90650054acc804f
        - url: https://github.com/GloriousEggroll/proton-ge-custom/releases/download/5.11-GE-3-MF/Proton-5.11-GE-3-MF.tar.gz
          checksum: sha256:262689d78d14ceaedd1657c762b71be730ed10f3ba6b6f53d7b91881efd10fef

    - name: Extract Proton GE
      unarchive:
        src: "/home/{{ stick_user }}/.steam/root/compatibilitytools.d/{{ item }}"
        dest: "/home/{{ stick_user }}/.steam/root/compatibilitytools.d/"
        remote_src: true
      loop:
        - Proton-5.9-GE-5-ST.tar.gz
        - Proton-5.11-GE-3-MF.tar.gz
